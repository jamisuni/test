@page "/"

<PageTitle>Home</PageTitle>

<h1>Testing: NAVIGATION</h1>

<h5>@($"NavigationManager.BaseUri = [{NavigationManager.BaseUri}]")</h5>


Hmm... NavigationManager... missing subdomain still


<MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="OnNavigateWeather">NM(BU):Weather</MudButton>


<MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="OnNavigateTest">NM:Test</MudButton>


<MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="OnNavigateTestThree">NM(BU):Test3</MudButton>

<p>
How about with NavLink?? seams handle subdomain automatically.. per correct base href I assume..

<div class="nav-item px-3">
    <NavLink class="nav-link" href="test">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> NL:Test
    </NavLink>
</div>

<div class="nav-item px-3">
    <NavLink class="nav-link" href="test/3">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> NL:Test3
    </NavLink>
</div>
</p>

<p>
    And also giving try for MudNavMenu


    <MudPaper Width="250px" Class="py-3" Elevation="0">
        <MudNavMenu>
            <MudText Typo="Typo.h6" Class="px-4">My Application</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Secondary Text</MudText>
            <MudDivider Class="my-2" />
            <MudNavLink Href="/test">MudNM: test</MudNavLink>
            <MudNavLink Href=@($"{NavigationManager.BaseUri}test/5")>MudNM(BU): test5</MudNavLink>
        </MudNavMenu>
    </MudPaper>
</p>

@code {
    
    [Inject] NavigationManager NavigationManager { get; set; }

    void OnNavigateWeather()
    {
        NavigationManager.NavigateTo(NavigationManager.BaseUri + "Weather");
    }

    void OnNavigateCounter()
    {
        NavigationManager.NavigateTo("/Counter");
    }

    void OnNavigateTest()
    {
        NavigationManager.NavigateTo("/Test");
    }

    void OnNavigateTestThree()
    {
        NavigationManager.NavigateTo(NavigationManager.BaseUri + "Test/3");
    }
}
